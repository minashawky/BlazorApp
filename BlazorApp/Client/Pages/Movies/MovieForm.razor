<EditForm Model="Movie" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <div class="form-group">
        <label>Title</label>
        <div>
            <InputText class="form-control" @bind-Value="Movie.Title" />
            <ValidationMessage For="@(() => Movie.Title)" />
        </div>
    </div>
    <div class="form-group">
        <label>In Theatres</label>
        <div>
            <InputCheckbox @bind-Value="Movie.InTheatres" />
            <ValidationMessage For="@(() => Movie.InTheatres)" />
        </div>
    </div>
    <div class="form-group">
        <label>Trailer</label>
        <div>
            <InputText class="form-control" @bind-Value="Movie.Trailer" />
            <ValidationMessage For="@(() => Movie.Trailer)" />
        </div>
    </div>
    <div class="form-group">
        <label>Release Date</label>
        <div>
            <InputDate class="form-control" @bind-Value="Movie.ReleaseDate" />
            <ValidationMessage For="@(() => Movie.ReleaseDate)" />
        </div>
    </div>
    <div class="form-group">
        <InputImage Label="Poster" OnSelectedImage="PosterSelected" ImageUrl="@imageUrl" />
    </div>
    <div class="form-group form-markdown">
        <InputMarkdown @bind-Value="Movie.Summary" Label="Summary" For="@(() => Movie.Summary)" />
    </div>
    <button class="btn btn-primary" type="submit">Save changes</button>
</EditForm>

@code {

    [Parameter] public Movie Movie { get; set; }
    [Parameter] public EventCallback OnValidSubmit { get; set; }

    private string imageUrl;

    protected override void OnInitialized()
    {
        if (!string.IsNullOrEmpty(Movie.Poster))
        {
            imageUrl = Movie.Poster;
            Movie.Poster = null;
        }
    }

    private void PosterSelected(string imageBase64)
    {
        Movie.Poster = imageBase64;
        imageUrl = null;
        Console.WriteLine(imageBase64);
    }
}
